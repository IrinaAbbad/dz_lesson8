class Order:
    _total_orders = 0  # Переменная класса для отслеживания общего количества заказов.
    all_orders = []  # Переменная класса для хранения всех заказов.

    def __init__(self, products: list, discount=None):  # Конструктор класса Order, принимающий список продуктов и скидку (опционально).
        self.products = products  # Присваиваем список продуктов атрибуту products.
        self.discount = discount  # Присваиваем скидку атрибуту discount, если она указана.
        Order._total_orders += 1  # Увеличиваем счетчик общего количества заказов на 1 при каждом создании заказа.
        Order.all_orders.append(self)  # Добавляем текущий заказ в общий список всех заказов.

    def total_price(self):  # Метод для вычисления общей цены всех товаров в заказе с учётом скидки.
        total = sum(product.price for product in self.products)  # Суммируем цены всех продуктов в заказе.
        if self.discount:  # Если скидка присутствует...
            total = self.discount.apply_discount(total)  # ...применяем скидку к общей цене.
        return total  # Возвращаем итоговую сумму заказа.

    @classmethod
    def total_orders(cls):  # Метод класса для получения общего количества заказов.
        return cls._total_orders  # Возвращает общее количество созданных заказов.

    @classmethod
    def total_sum(cls):  # Метод класса для получения общей суммы всех заказов.
        return sum(order.total_price() for order in cls.all_orders)  # Суммирует и возвращает цену всех заказов.

    def __str__(self):  # Метод для строкового представления заказа.
        return f"Заказ (Общая цена = {self.total_price()})"  # Возвращает строку с общей ценой заказа.


    
    """
    Класс Order

    Этот класс представляет заказ в интернет-магазине.

    Метод __init__:
        Конструктор принимает список товаров (products) и инициализирует объект Order.
        Увеличивает счетчик _total_orders на 1 каждый раз при создании нового заказа.
        Также добавляет созданный заказ в общий список всех заказов.
        Пример: order1 = Order([product1, product2]) создаст заказ, содержащий два товара.

    Метод total_price:
        Вычисляет общую стоимость всех товаров в заказе, суммируя их цены.
        Пример: order1.total_price() вернет 1500, если в заказе два товара с ценами 1000 и 500.

    Метод total_orders:
        Метод класса, который возвращает общее количество созданных заказов.
        Пример: Order.total_orders() вернет общее количество заказов, например, 5.

    Метод total_sum:
        Метод класса, который возвращает общую сумму всех заказов.
        Пример: Order.total_sum() вернет общую сумму всех заказов, например, 4500.

    Метод __str__:
        Возвращает строковое представление объекта заказа, включающее общую стоимость заказа.
        Пример: print(order1) выведет "Заказ (Общая цена = 1500)".
    """

